AWSTemplateFormatVersion: 2010-09-09
Parameters:
  # ALB
  IpAddressType:
    Type: String
    Default: ipv4
    AllowedValues: [ipv4, dualstack]
    ConstraintDescription: must be ipv4 or dualstack
  IdleTimeout:
    Type: String
    Default: 60
  ALBName:
    Type: String
  Scheme:
    Type: String
    Default: internet-facing
    AllowedValues: [internal, internet-facing]
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  ALBType:
    Type: String
    Default: application
    AllowedValues: [application, network]
    ConstraintDescription: must be application or network
  ALBTagName:
    Type: String

  # Target Group
  HealthCheckIntervalSeconds:
    Type: Number
    Default: 30
    MinValue: 5
    MaxValue: 300
  HealthCheckPath:
    Type: String
    Default: "/"
  HealthCheckPort:
    Type: String
    Default: traffic-port
    AllowedValues: [traffic-port, override]
  HealthCheckProtocol:
    Type: String
    Default: HTTP
  HealthCheckTimeoutSeconds:
    Type: Number
    Default: 5
    MinValue: 2
    MaxValue: 120
  HealthyThresholdCount:
    Type: Number
    Default: 5
    MinValue: 2
    MaxValue: 10
  HttpCodeResponse:
    Type: String
    Default: 200
  TargetGroupName:
    Type: String
  TargetGroupPort:
    Type: Number
    Default: 80
    MinValue: 1
    MaxValue: 65535
  TargetGroupProtocol:
    Type: String
    Default: HTTP
    AllowedValues: [HTTP, HTTPS, TCP, TLS]
  TargetGroupDeregDelay:
    Type: Number
    Default: 30
    MinValue: 0
    MaxValue: 3600
  TargetGroupTargetType:
    Type: String
    Default: ip
    AllowedValues: [instance, ip, lambda]
  TargetGroupUnhealthyThresholdCount:
    Type: Number
    Default: 2
    MinValue: 2
    MaxValue: 10

  # Listener
  SSLCertificate:
    Type: String

  # Security Group
  GroupName:
    Type: String
  GroupDescription:
    Type: String
  CidrIpEgress:
    Type: String
    Default: 0.0.0.0/0
  FromPortEgress:
    Type: String
  IpProtocolEgress:
    Type: String
    Default: -1
  ToPortEgress:
    Type: String
  CidrIpIngress:
    Type: String
    Default: 0.0.0.0/0
  FromPortIngress:
    Type: String
    Default: 22
  IpProtocolIngress:
    Type: String
    Default: tcp
  ToPortIngress:
    Type: Number
    Default: 22
  VpcId:
    Type: AWS::EC2::VPC::Id

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: ALB
        Parameters:
          - ALBName
          - ALBType
          - IpAddressType
          - Scheme
          - Subnets
          - IdleTimeout
          - ALBTagName

      - Label:
          default: Listener
        Parameters:
          - SSLCertificate

      - Label: 
          default: Target Group
        Parameters:
          - TargetGroupName
          - TargetGroupProtocol
          - TargetGroupPort
          - TargetGroupTargetType
          - TargetGroupDeregDelay
          - HealthCheckProtocol
          - HealthCheckPath
          - HealthCheckPort
          - HealthyThresholdCount
          - TargetGroupUnhealthyThresholdCount
          - HealthCheckTimeoutSeconds
          - HealthCheckIntervalSeconds
          - HttpCodeResponse

      - Label: 
          default: Security Group
        Parameters:
          - GroupName
          - GroupDescription
          - VpcId
          - IpProtocolIngress
          - CidrIpIngress
          - FromPortIngress
          - ToPortIngress
          - IpProtocolEgress
          - CidrIpEgress
          - FromPortEgress
          - ToPortEgress

    ParameterLabels:
      ALBName:
        default: ALB Name
      ALBType:
        default: ALB Type
      IpAddressType:
        default: Ip Address Type
      Subnets:
        default: Subnet ID
      IdleTimeout:
        default: Idle Timeout
      ALBTagName:
        default: ALB Tag Name

      SSLCertificate:
        default: SSL Certificate ARN
      
      GroupName:
        default: Group Name
      GroupDescription:
        default: Group Description
      VpcId:
        default: Vpc ID
      IpProtocolIngress:
        default: Ip Protocol (Ingress)
      CidrIpIngress:
        default: CIDR Ip (Ingress)
      FromPortIngress:
        default: From Port (Ingress)
      ToPortIngress:
        default: To Port (Ingress)
      IpProtocolEgress:
        default: Ip Protocol (Egress)
      CidrIpEgress:
        default: CIDR Ip (Egress)
      FromPortEgress:
        default: From Port (Egress)
      ToPortEgress:
        default: To Port (Egress)

      TargetGroupName:
        default: Target Group Name
      TargetGroupProtocol:
        default: Target Group Protocol
      TargetGroupPort:
        default: Target Group Port
      TargetGroupTargetType:
        default: Target Type
      TargetGroupDeregDelay:
        default: Deregistration Delay
      HealthCheckProtocol:
        default: Health Check Protocol
      HealthCheckPath:
        default: Health Check Path
      HealthCheckPort:
        default: Health Check Port
      HealthyThresholdCount:
        default: Health Check Healthy Threshold Count
      TargetGroupUnhealthyThresholdCount:
        default: Health Check Health Unhealthy Threshold Count
      HealthCheckTimeoutSeconds:
        default: Health Check Timeout (Seconds)
      HealthCheckIntervalSeconds:
        default: Health Check Interval (Seconds)
      HttpCodeResponse:
        default: Health Check Response Success Code

Resources:
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: !Ref IpAddressType
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: !Ref IdleTimeout
      Name: !Ref ALBName
      Scheme: !Ref Scheme
      SecurityGroups:
        - !Ref SecurityGroup
      Subnets:
        - !Select [ 0, !Ref Subnets ]
        - !Select [ 1, !Ref Subnets ]
        - !Select [ 2, !Ref Subnets ]
      Type: !Ref ALBType

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: !Ref HealthCheckIntervalSeconds
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckPort: !Ref HealthCheckPort
      HealthCheckProtocol: !Ref HealthCheckProtocol
      HealthCheckTimeoutSeconds: !Ref HealthCheckTimeoutSeconds
      HealthyThresholdCount: !Ref HealthyThresholdCount
      Matcher: 
        HttpCode: !Ref HttpCodeResponse
      Name: !Ref TargetGroupName
      Port: !Ref TargetGroupPort
      Protocol: !Ref TargetGroupProtocol
      TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds
          Value: !Ref TargetGroupDeregDelay
      TargetType: !Ref TargetGroupTargetType
      UnhealthyThresholdCount: !Ref TargetGroupUnhealthyThresholdCount
      VpcId: !Ref VpcId

  HTTPlistener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  HTTPSlistener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref SSLCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 443
      Protocol: HTTPS

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref GroupName
      GroupDescription: !Ref GroupDescription
      SecurityGroupEgress:
        - CidrIp: !Ref CidrIpEgress
          IpProtocol: !Ref IpProtocolEgress
          FromPort: !Ref FromPortEgress
          ToPort: !Ref ToPortEgress
      SecurityGroupIngress:
        - CidrIp: !Ref CidrIpIngress
          IpProtocol: !Ref IpProtocolIngress
          FromPort: !Ref FromPortIngress
          ToPort: !Ref ToPortIngress
      VpcId: !Ref VpcId

Outputs:
  ALBEndPoint:
    Description: DNS Endpoint of ALB
    Value: !GetAtt ALB.DNSName